.routerOutletContents {
  display: flex;
  width: 100%;
  height: 100%;
  position: absolute;

  > * {
    position: initial;
    flex: 1;
  }

  /* Change order here, so css selector + can be used below */
  > ion-router-outlet {
    order: -1;
  }

  /* If empty state or page is shown (not hidden), router outlet (first column) should have max width */
  > div:not(:global(.ion-hide)) ~ ion-router-outlet {
    flex: 0 0 var(--first-column-width);
    max-width: calc(100% - 300px);
  }

  /* Column divider */
  > .columnDivider {
    order: 0;
    flex: 0 0 auto;
  }

  /* First column (main content) */
  > ion-router-outlet > :global(.ion-page),
  /* Second column */
  > :global(.ion-page) {
    > ion-header {
      /* Header doesn't support dynamic font size */
      ion-button,
      ion-back-button,
      ion-title {
        font-size: 17px;
      }

      /* Ionic's default font size for icons in header is a bit too large */
      ion-button:global(.in-toolbar) ion-icon {
        font-size: 1.35em !important;
      }

      ion-back-button:global(.md)::part(text) {
        display: none;
      }
    }
  }
}

/* Resizable divider styles */
.columnDivider {
  width: 4px;
  background: var(
    --ion-toolbar-background,
    var(--ion-color-step-50, var(--ion-background-color-step-50, #f7f7f7))
  );
  cursor: col-resize;
  position: relative;
  transition: background-color 0.2s ease;
}

.columnDivider:hover,
.columnDivider:active {
  background: var(--ion-color-light);
}

.columnDivider::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 2px;
  height: 20px;
  background: var(--ion-color-light);
  border-radius: 1px;
}
