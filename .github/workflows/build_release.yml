name: build_release

on:
  workflow_call: # for beta releases from main - release.yml / dispatch_beta_release
    inputs:
      is_main_build:
        type: boolean
        required: true
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  BUILD_LABEL: ${{ inputs.is_main_build && github.sha || github.ref_name }}

jobs:
  build_docker:
    uses: ./.github/workflows/docker.yml
    with:
      is_main_build: ${{ inputs.is_main_build || false }}
    permissions:
      contents: read
      packages: write

  build_web:
    concurrency:
      group: web-release
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write # aws
    steps:
      - uses: actions/checkout@v5

      - name: Download bumped version artifacts
        if: inputs.is_main_build
        uses: actions/download-artifact@v5
        with:
          name: release-data

      - uses: oven-sh/setup-bun@v2

      - name: üì¶ Install dependencies
        run: bun install --frozen-lockfile

      - name: Build dist bundle
        run: bun run build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Upload dist bundle to S3
        run: |
          aws s3 sync dist/ s3://${{ inputs.is_main_build && 'beta.vger.app' || 'vger.app'}}/ --delete

      - name: Compress artifacts
        run: |
          zip -r Voyager-Web-$BUILD_LABEL.zip dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Voyager-Web-${{ env.BUILD_LABEL }}.zip
          path: Voyager-Web-${{ env.BUILD_LABEL }}.zip

  build_ios:
    concurrency:
      group: ios-release
    environment: deploy
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5

      - name: Download bumped version artifacts
        if: inputs.is_main_build
        uses: actions/download-artifact@v5
        with:
          name: release-data

      - run: bun install --frozen-lockfile

      - uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1.6.0
        with:
          xcode-version: latest-stable

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"

      - name: Install Fastlane
        run: |
          gem install bundler
          bundle install

      - run: bun i --frozen-lockfile

      - name: Build (Ionic)
        run: bunx ionic cap sync
        env:
          CI_PLATFORM: ios

      - name: Deploy to TestFlight
        run: |
          echo "$APP_STORE_CONNECT_KEY" > authkey.json
          bundle exec fastlane deploy
        env:
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          COMMIT_MSG: ${{ github.event.commits[0].message }}

      - name: Upload iOS IPA as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Voyager-iOS-${{ env.BUILD_LABEL }}.ipa
          path: Voyager-iOS-${{ env.BUILD_LABEL }}.ipa

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Download bumped version artifacts
        if: inputs.is_main_build
        uses: actions/download-artifact@v5
        with:
          name: release-data

      - run: bun install --frozen-lockfile

      - run: bun i --frozen-lockfile

      - name: Build (Ionic)
        run: bunx ionic cap sync
        env:
          BUILD_FOSS_ONLY: true
          CI_PLATFORM: android

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
          cache: gradle
      - name: Build (Android)
        run: |
          echo $ANDROID_KEYSTORE | base64 --decode > android/app/release-ci.keystore
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - run: mv android/app/build/outputs/apk/release/app-release.apk Voyager-Android-${{ env.BUILD_LABEL }}.apk

      - name: Send to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Voyager-Android-${{ env.BUILD_LABEL }}.apk
          path: Voyager-Android-${{ env.BUILD_LABEL }}.apk

  build_android_play:
    concurrency:
      group: android-release
    environment: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Download bumped version artifacts
        if: inputs.is_main_build
        uses: actions/download-artifact@v5
        with:
          name: release-data

      - run: bun install --frozen-lockfile

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4"

      - name: Install Fastlane
        run: |
          gem install bundler
          bundle install

      - run: bun i --frozen-lockfile

      - name: Build (Ionic)
        run: bunx ionic cap sync
        env:
          CI_PLATFORM: android

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "corretto"
          cache: gradle

      - name: Build (Android)
        run: |
          echo $ANDROID_KEYSTORE | base64 --decode > android/app/release-ci.keystore
        env:
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}

      - name: Setup service account
        run: echo $GOOGLE_SERVICE_ACCOUNT | base64 --decode > android/pc-api.json
        env:
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

      - name: Run Fastlane
        run: bundle exec fastlane android deploy
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

  create_release:
    needs:
      - build_web
      - build_ios
      - build_android_play
      - build_android
      - build_docker
    if: inputs.is_main_build != true
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v5
        with:
          name: Voyager-Web-${{ env.BUILD_LABEL }}.zip
          path: artifacts/web

      - name: Download iOS Artifact
        uses: actions/download-artifact@v5
        with:
          name: Voyager-iOS-${{ env.BUILD_LABEL }}.ipa
          path: artifacts/ios

      - name: Download Android Artifact
        uses: actions/download-artifact@v5
        with:
          name: Voyager-Android-${{ env.BUILD_LABEL }}.apk
          path: artifacts/android

        # https://github.com/softprops/action-gh-release/pull/372#issuecomment-1642643937
      - name: Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@c9dc8369bccbc41e0ac887f8fd674f5925d315f7 # v5.4.1
        with:
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "labels": ["feat"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix"]
                },
                {
                  "title": "## üìù Other Changes",
                  "labels": ["build", "chore", "ci", "docs", "perf", "refactor", "revert", "style", "test"]
                }
              ],
              "label_extractor": [
                {
                  "pattern": "^(feat|fix|build|chore|ci|docs|perf|refactor|revert|style|test){1}(\\([\\w\\-\\.]+\\))?(!)?: ([\\w ])+([\\s\\S]*)",
                  "on_property": "title",
                  "target": "$1"
                }
              ]
            }

      - name: Release
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2.4.0
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          files: |
            artifacts/ios/*
            artifacts/android/*
            artifacts/web/*
